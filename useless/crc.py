def b(x):
    return int(bin(x)[2:])

def li(n):
    return list(map(int,str(b(n))))

hexPack = "0c8728aa04af1e7b01ee387100d28c663c210c81bbe55fa939351eeb7fe910851983058ac3e148e6683feb69998b472f045710c9ef50a93099c426d4929d78f73f481be4683dca2902cb1aac664b83eed07e0325722a1b8d438f66c85c63fe6b1afe52137ec38dd089735358bb28b2ae5a793b492faec2767a863cb6ab341098fa4fc8f934f40b7b27a61e9ce48b039abe583c1b4f41826fba21c8c165ed15d203aafdeb79e63d6ae065bb666446faa62167f48c1656d9fcec3962b488505b94ad67fe0397ae47cfc291d302ca8927306b9f9a8b05cafe616c93abaaad69cff87655eede3f18ef0af9d0dc005b937599c98a559cb202b9334a7356986df1de795f02f11886ebdc70880a2ac3f7c31661b365f67cce29d05e614a4d813eeae6f4c5c6110e69dcc23ac63ba18dd859d63868818412863ff2939891c5e42de000fcf0dee18aa70967732e18b1d48f6848fe66dcdea88f15c5298f17426b756f8104f4e063eb11e3a5a7b7659170875dd5577a00cdb84e82ca63c5f8e0ddec9363169fcdebca24705398c95dd7cfc73f9f99c6f2b89e180fe94557337301516886c96784ea2fce3abba6661ad2a128d30ae0dca1e15d4ae2616b114edba830c9060e034d936f933c24cc53409515dd9b3b3c7d18b78c69c28394ea4719d35cc653320e97fdd6c3839ca6a444f68a10afa7cfdabbaf6dd571b5dc8cacdeb9059d4e873c3ea0d480aaf85a282a82953b38c25cc9372bee108dbb08f580430b7ac8946a2c0f574357ac08f22ec023d2c82bcb7e948cfd3ec1650e2ccecd256fb9c1eae459cd41a302898112bed70095245ed628a06fda21ec37cb592ddbe23e2954e3974051f4da705f3693e0650664b78f3a6641794b2dbe6d12c51268a8584706ac637f6089b1fa109dfc093c43ed8ec03033314e17e0c592ccee8d0e1d44482cf3df0eba36f99cb1c45e9836c89d4c1bf7a1b351c14c265bfa6df9ae05e36f84659f77fe57f916d9ef6b0f2ada7ea56d63c2cdf3e6e74b35494fe9146eb5323d7e345733d220f02f9f6f83be32cc7973b9063018f6d775aeb1377570fb5f97cbca19ff5d27fc6bb20e40cd7f09a560b510b16d199a5e87d172d548d45d5448a6fd40f36e6172e499fdbf3e54a4783b79d2ebe19fc335b36fd198b9c5f3b482a4d0461c97cab59daa9a443d137f495dee2cf6126c31373409e255f1664f64a3b3c351b84148c8b0eaec78ee1099db093ba89d6f45e0fa0b92bcbf8a5569efa2dae108dc3b6cfa2f4965c7e60173aaf581498059e991399a43f50d9d7446f9fdef2ca8f6b30fec5dbf1846a5448d249aca68c162e5beea124bb5ab02c9585b5c6ec917b1896e1635bdfafc6babf769fc41faf35027efc51f6e36467c717d15fcd8fe4d32ca3bf8b5a8455064a13ec0af647d2ad0943c097f89b4b681ec2f89d70c194dd95864c6fcbd12f566424a909441c49f96b9b3558b38ede130a4fa2b3e90e493a20b9cd1968b5a7e467812ed3de0898636858be0336196111d73727fe4dcc876a2e9809bbffed58f5bdf3b5925d086b9600410d4d8b813fb7c1eb1792996ff55a9ff0ae40f9b6f6e2df460178ab68e9d3ab7f67eb7c59a987eccc483f879cde553de78742136621880903e4077d5a61a02524347826ad8207df38aade5eca806412b26c3488efe45eb91365015377b04faaa"



packet = int(bin(int(hexPack, 16)).zfill(8)[2:], 2)
poly  = 4374732215

# 1557394236 -> check sum
# 1320065244 -> calc with 31
# 2965741524 -> calc with 32

import sys
sys.set_int_max_str_digits(65537)

print(b(packet))
print(b(poly))

m = li(packet)
l = len(m)
p = li(poly)

for i in range(len(p) - 1):
    m.append(0)

i = 0
while True:
    if m[i] == 1:
        for j in range(len(p)):
            m[i + j] = m[i + j] ^ p[j]
    
        #for x in m:
        #    print(x, end="")
        #print()
        
        flag = True
        for k in range(l):
            if m[k] == 1:
                flag = False
        
        if flag:
            break
    i += 1

for id in range(l, len(m)):
    print(m[id], end="")

print()
